<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nodejs Dersleri</title>
    <atom:link href="http://nodejs-dersleri.github.io/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://nodejs-dersleri.github.io</link>
    <description>NODEJS İÇİN TÜRKÇE KAYNAK, NOTLAR, ÖRNEK UYGULAMALAR</description>
    <pubDate>Tue, 03 Nov 2015 23:30:00 +0200</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Npm modulleri - Inquirerjs nedir?</title>
      <link>http://nodejs-dersleri.github.io/articles/npm-moduleri-inquirerjs-nedir/</link>
      <pubDate>Tue, 03 Nov 2015 23:30:00 +0200</pubDate>
      <guid isPermaLink="true">http://nodejs-dersleri.github.io/articles/npm-moduleri-inquirerjs-nedir/</guid>
      <author></author>
      <description>&lt;p&gt;Yeoman ile proje oluşturduğumuzda ya da &lt;code&gt;npm init&lt;/code&gt; yaptığımızda karşımıza bazı sorular gelir. Inquirerjs’le tam olarak bunu yapcağız.&lt;/p&gt;
&lt;p&gt;Kullanıcıya bazı sorular sorup cevaplarına göre işlem yapacağız.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://youtu.be/qGWs6qI4sw8&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/qGWs6qI4sw8/0.jpg&quot; alt=&quot;Nodejs dersleri&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;package-json&quot;&gt;package.json&lt;/h3&gt;
&lt;p&gt;Npm init ile başlıyoruz.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;package.json dosyamız oluştu.&lt;/p&gt;
&lt;h3 id=&quot;index-js&quot;&gt;index.js&lt;/h3&gt;
&lt;p&gt;Şimdi &lt;code&gt;index.js&lt;/code&gt; dosyası oluşturuyoruz.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/npm-moduleri-inquirerjs-nedir/main.png&quot; alt=&quot;main.js&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// inquirer modülünü çağırıyoruz
var inquirer = require(&amp;#39;inquirer&amp;#39;);

// gelen veriye göre bir dosya oluşturacağız bunun içinde `fs` modülünü kullanacağız.
var fs = require(&amp;#39;fs&amp;#39;);

// Sorularımızı oluşturuyoruz

var  questions = [
  {
    type: &amp;quot;input&amp;quot;,
    name: &amp;quot;name&amp;quot;,
    message: &amp;quot;Project name?&amp;quot;
  },
  {
    type: &amp;quot;list&amp;quot;,
     name: &amp;quot;main&amp;quot;,
     message: &amp;quot;Main file&amp;quot;,
     choices: [ &amp;quot;app.js&amp;quot;, &amp;quot;app2.js&amp;quot;, &amp;quot;npm.js&amp;quot; ],
  },
  {
      type: &amp;quot;password&amp;quot;,
      name : &amp;#39;checkbox&amp;#39;,
      message : &amp;#39;Password&amp;#39;
  }
];

// şimdi inquirerjs&amp;#39;i çalıştırıyoruz



inquirer.prompt(questions, function( answers ) {

  // Eğer main dosyası var ise fs ile, seçilen dosyayı oluşturacağız
  if(answers.main){

      // @ oluşturulacak dosya
      // @ dosyaya yazacağımız data
      // @ işlem sonucu
      fs.writeFile(answers.main, &amp;#39;var main =&amp;quot;&amp;quot;;&amp;#39;, function(){
        console.log(&amp;#39;dosya yazıldı! Şimdi dizininizi kontrol edin&amp;#39;)
      });
  }
  console.log(JSON.stringify(answers, null , &amp;#39; &amp;#39;));
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Çıktı olarak console’a json datayı yazacak ve seçilen dosyayı dizin klasörüne oluşturacak.&lt;/p&gt;
&lt;h3 id=&quot;okudu-unuz-i-in-te-ekk-r-ederim-&quot;&gt;Okuduğunuz için teşekkür ederim.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs-dersleri&quot;&gt;Tüm Github repositorileri&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
    <item>
      <title>Npm modül yapımı 1</title>
      <link>http://nodejs-dersleri.github.io/articles/npm-modul-yapimi-1/</link>
      <pubDate>Mon, 02 Nov 2015 00:30:00 +0200</pubDate>
      <guid isPermaLink="true">http://nodejs-dersleri.github.io/articles/npm-modul-yapimi-1/</guid>
      <author></author>
      <description>&lt;p&gt;Npm için yapacağımız bu modül her çağırdığımızda bize benzersiz ID’ler üretecek. Modülümüzü oluşturduktan sonra küçük bir test yazaıp onaydan geçirdikten sonra npm sitesine kayıt işlemini yapalım.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;yap-lacaklar&quot;&gt;Yapılacaklar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Modülü oluşturalım&lt;/li&gt;
&lt;li&gt;Basit bir test yazalım&lt;/li&gt;
&lt;li&gt;Modulü npm sitesine kayıt ettirelim&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Npm init yaparak başlayalım. proje dosyası oluşturup terminalden klasöre erilim daha sonra &lt;code&gt;npm init&lt;/code&gt; yaparak başlayalım.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Modülünüzün ismini, açıklamasını, versiyonunu .etc girdikten sonra package.json dosyamızı oluşturduk.&lt;/p&gt;
&lt;h3 id=&quot;package-json&quot;&gt;package.json&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;guidfy&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.0.1&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;Globally unique identifier&amp;quot;,
  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,
  &amp;quot;scripts&amp;quot;: {
    &amp;quot;test&amp;quot;: &amp;quot;mocha -R spec -u tdd tests/*.js&amp;quot;
  },
  &amp;quot;devDependencies&amp;quot;: {
    &amp;quot;mocha&amp;quot;: &amp;quot;~1.14.0&amp;quot;,
    &amp;quot;should&amp;quot;: &amp;quot;^7.1.1&amp;quot;
  },
  &amp;quot;repository&amp;quot;: {
    &amp;quot;type&amp;quot;: &amp;quot;git&amp;quot;,
    &amp;quot;url&amp;quot;: &amp;quot;git+https://github.com/arifcakiroglu/guidify.git&amp;quot;
  },
  &amp;quot;keywords&amp;quot;: [
    &amp;quot;unique&amp;quot;,
    &amp;quot;id&amp;quot;,
    &amp;quot;unique&amp;quot;,
    &amp;quot;guid&amp;quot;,
    &amp;quot;guidify&amp;quot;
  ],
  &amp;quot;author&amp;quot;: &amp;quot;Arif Cakiroglu &amp;lt;cakirogluarif@gmail.com&amp;gt;&amp;quot;,
  &amp;quot;license&amp;quot;: &amp;quot;MIT&amp;quot;,
  &amp;quot;bugs&amp;quot;: {
    &amp;quot;url&amp;quot;: &amp;quot;https://github.com/arifcakiroglu/guidify/issues&amp;quot;
  },
  &amp;quot;homepage&amp;quot;: &amp;quot;https://github.com/arifcakiroglu/guidify#readme&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;index-js&quot;&gt;index.js&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;module.exports= function(){
  // Anlık tarihi alıp d değişkenine atıyoruz.
  var d = new Date().getTime();

  // &amp;#39;xxx&amp;#39; uzunluğunda bir çıktı üreteceğiz.
  var guid = &amp;#39;xxxxxxxxxxxxxxxxxxxx&amp;#39;.replace(/[x]/g, function(c) {
    var r = (d + Math.random()*16)%16 | 0;
    d = Math.floor(d/16);
    return (c==&amp;#39;x&amp;#39; ? r : (r&amp;amp;0x3|0x8)).toString(16);
  });

  // Test edelim çalışıyoru mu diye
  // console.log(&amp;quot;Bu ilk guid&amp;#39;imiz %s&amp;quot;,guid);
  return guid
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Modülümüzün index dosyasını oluşturduk çalışıp çalışmadığını görmek için &lt;code&gt;app.js&lt;/code&gt; dosyası oluşturup modülümüzü çağıracağız&lt;/p&gt;
&lt;h3 id=&quot;app-js&quot;&gt;app.js&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;// şimdilik denemek için ./index.js olarak çağırıyoruz npm&amp;#39;e kayıt ettirmeden önce app.js dosyasını sileceğiz

var guidify = require(&amp;quot;./index.js&amp;quot;);
console.log(&amp;quot;Bu ilk guid&amp;#39;imiz %s&amp;quot;, guidify());

// Çıktımız bu şekilde oldu. Her denemede farklı bir çıktı alacağız.
// Bu ilk guid&amp;#39;imiz 18dc1f7c0373d09bdc1a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/articles/npm-modul-yapimi-1/log.png&quot; alt=&quot;ilk çıktı&quot;&gt;&lt;/p&gt;
&lt;p&gt;Şimdi ise bir test yazalım.&lt;/p&gt;
&lt;p&gt;Bunun için &lt;code&gt;/tests&lt;/code&gt; klasörü açıyorum içerisine &lt;code&gt;guidify.js&lt;/code&gt; dosyamı oluşturuyorum.&lt;/p&gt;
&lt;h3 id=&quot;guidify-js&quot;&gt;guidify.js&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;/**
 * Module dependencies.
 */

 // bir üst dizindeki modülümüzü çağırıyoruz
var Guidify = require(&amp;#39;../index.js&amp;#39;);
var assert = require(&amp;#39;assert&amp;#39;);

suite(&amp;#39;\033[36m Test guid yaratıcı \033[90m&amp;#39;, function() {
  test(&amp;#39;unique&amp;#39;, function(done) {
    var guid = Guidify();
    assert.equal(typeof(guid), &amp;#39;string&amp;#39;, &amp;#39;Should return a string&amp;#39; );
    assert.equal(guid.length, 20, &amp;#39;Should return a string with length 20&amp;#39; );
    done();
  });
});
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;makefile&quot;&gt;Makefile&lt;/h3&gt;
&lt;p&gt;Terminalden &lt;code&gt;make test&lt;/code&gt; ya da &lt;code&gt;npm test&lt;/code&gt; yazarak testimizi çalıştırıyoruz.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/npm-modul-yapimi-1/test.png&quot; alt=&quot;test&quot;&gt;&lt;/p&gt;
&lt;p&gt;Makefile’ın ne olduğunu ve detaylarını başka bir makalede açıklayacapım. (yazınca buraya linkini eklerim söz)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install: package.json
    @npm install

test:
    @./node_modules/.bin/mocha -u tdd

.PHONY: test
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;npm-kay-t&quot;&gt;Npm kayıt&lt;/h3&gt;
&lt;p&gt;Geç oldu buna yarın devam ederim :)&lt;/p&gt;
&lt;h3 id=&quot;okudu-unuz-i-in-te-ekk-r-ederim-&quot;&gt;Okuduğunuz için teşekkür ederim.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs-dersleri&quot;&gt;Tüm Github repositorileri&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
    <item>
      <title>Nodejs ile screen scraping</title>
      <link>http://nodejs-dersleri.github.io/articles/nodejs-ile-screen-scraping/</link>
      <pubDate>Sun, 01 Nov 2015 16:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://nodejs-dersleri.github.io/articles/nodejs-ile-screen-scraping/</guid>
      <author></author>
      <description>&lt;p&gt;Herhangi bir siteden istediğiniz verileri jQuery core komutlarıyla alabilirsiniz. Bunun için &lt;code&gt;request&lt;/code&gt; ve &lt;code&gt;cheerio&lt;/code&gt; npm modullerini kullanacağız.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;request&lt;/code&gt; ile indirdiğimiz datayı &lt;code&gt;cheerio&lt;/code&gt; kullanarak jQuery gibi işlem yapacağız.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;packages-json&quot;&gt;packages.json&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;screen-scraping&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.0.1&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;Nodejs ile screen scraping&amp;quot;,
  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,
  &amp;quot;scripts&amp;quot;: {
    &amp;quot;start&amp;quot;: &amp;quot;node index.js&amp;quot;
  },
  &amp;quot;author&amp;quot;: &amp;quot;Arif Cakiroglu &amp;lt;cakirogluarif@gmail.com&amp;gt; (http://www.arifcakiroglu.com)&amp;quot;,
  &amp;quot;license&amp;quot;: &amp;quot;ISC&amp;quot;,
  &amp;quot;dependencies&amp;quot;: {
    &amp;quot;cheerio&amp;quot;: &amp;quot;^0.19.0&amp;quot;,
    &amp;quot;request&amp;quot;: &amp;quot;^2.65.0&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;packages.json&lt;/code&gt; dosyasını oluşturduktan sonra &lt;code&gt;npm install&lt;/code&gt; komutunu çalıştırıyoruz.&lt;/p&gt;
&lt;p&gt;Npm modulleri proje dosyamıza node_modules klasörüne inecektir. Daha sonra &lt;code&gt;index.js&lt;/code&gt; dosyası oluşturuyoruz.&lt;/p&gt;
&lt;h3 id=&quot;index-js&quot;&gt;index.js&lt;/h3&gt;
&lt;p&gt;Öncelikle node modullerimizi çağırıyoruz.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
var request = require(&amp;#39;request&amp;#39;);
var cheerio = require(&amp;#39;cheerio&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Url olarak static bir url ekliyorum: &lt;code&gt;var url = &amp;#39;https://www.npmjs.com/package/q&amp;#39;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Url sonundaki ‘q’ yerine herhangi bir npm modulü yazabilirsiniz.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;request(url, function(error, response, html){
  if(!error){
    // request ile çağırdığımız urlden gelen html datayı &amp;#39;$&amp;#39; olarak yeniden tanımlıyoruz.
    var $ = cheerio.load(html);

    // Çıktı için json objesi oluşturuyorum
    var json = {};
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;cheerio modulü hakkında daha fazla bilgi almak için &lt;a href=&quot;https://github.com/cheeriojs/cheerio&quot;&gt;reposu&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/* Modül isminin bulunduğu yeri inspectElement ile bulup alıyorum.
 * .package-name class&amp;#39;ını seçiyorum ve datasını json objesine title olarak atıyorum
 * daha sonra bu datayı console.log() ile yazdıracağız.
 */

$(&amp;#39;.package-name&amp;#39;).filter(function(){
  json.title = $(this).text().trim()
});


console.log(JSON.stringify(json, null, 4));
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ve çıktı olarak name’ini alıyoruz&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/nodejs-ile-screen-scraping/nodejs-ile-screen-scraping-1.png&quot; alt=&quot;ilk çıktımız&quot;&gt;&lt;/p&gt;
&lt;p&gt;description, repository ve toplam download sayısını da alıyoruz&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
// Description
$(&amp;#39;.package-description&amp;#39;).filter(function(){
  json.desc = $(this).text().trim()
});


// Repository
$(&amp;#39;.box li&amp;#39;).eq(2).filter(function(){
  json.repo = $(this).text().trim()
});


// Total download
$(&amp;#39;.collaborators&amp;#39;).next().next().filter(function(){
    json.stats = $(this).children().eq(2).text().replace(/\s+/g, &amp;#39; &amp;#39;).trim();
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/articles/nodejs-ile-screen-scraping/nodejs-ile-screen-scraping-2.png&quot; alt=&quot;ikinci çıktımız&quot;&gt;&lt;/p&gt;
&lt;p&gt;Kısaca cheerio kullanarak screen scraping için basit bir örnek oluşturduk.&lt;/p&gt;
&lt;p&gt;Daha sonrası için &lt;a href=&quot;http://phantomjs.org/&quot;&gt;phanthopjs&lt;/a&gt; ile bir uygulama yapacağız. Yazınca buray ekleyeceğim linkini.&lt;/p&gt;
&lt;h3 id=&quot;okudu-unuz-i-in-te-ekk-r-ederim-&quot;&gt;Okuduğunuz için teşekkür ederim.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs-dersleri&quot;&gt;Tüm Github repositorileri&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
  </channel>
</rss>