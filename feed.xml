<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nodejs Dersleri</title>
    <atom:link href="http://nodejs-dersleri.github.io/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://nodejs-dersleri.github.io</link>
    <description>NODEJS İÇİN TÜRKÇE KAYNAK, NOTLAR, ÖRNEK UYGULAMALAR</description>
    <pubDate>Thu, 05 Nov 2015 23:30:00 +0200</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Npm modulleri - Chalk nedir?</title>
      <link>http://nodejs-dersleri.github.io/articles/npm-moduleri-chalk-nedir/</link>
      <pubDate>Thu, 05 Nov 2015 23:30:00 +0200</pubDate>
      <guid isPermaLink="true">http://nodejs-dersleri.github.io/articles/npm-moduleri-chalk-nedir/</guid>
      <author></author>
      <description>&lt;p&gt;Chalk, colors, cli-color modülleri aslında aynı işe yarıyor. Terminalde verdiğiniz çıktıları renklendirip font’ları ile farkındalık yaratabilirsiniz.&lt;/p&gt;
&lt;p&gt;Aralarında bazı farklılıklar olsa da içlerinde hız, api bakımından en iyisi(benim için). İndirilme oranıda epey yüksek, 5700’den fazla &lt;a href=&quot;https://www.npmjs.com/browse/depended/chalk&quot;&gt;npm modülünde&lt;/a&gt; kullanılmış.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;/articles/npm-moduleri-chalk-nedir/npm-modulleri-chalk.svg&quot; alt=&quot;Npm modulleri - Chalk nedir&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Konuyu iki başlık altında inceleyeceğiz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Chalk’ın kullanılışı&lt;/li&gt;
&lt;li&gt;Chalk gibi bir modül ya da util nasıl yapabiliriz.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h3 id=&quot;package-json&quot;&gt;package.json&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;chalk-module&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,
  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,
  &amp;quot;repository&amp;quot; : {
    &amp;quot;type&amp;quot; : &amp;quot;git&amp;quot;,
    &amp;quot;url&amp;quot; : &amp;quot;https://github.com/nodejs-dersleri/chalk&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;index-js&quot;&gt;index.js&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
&amp;#39;use strict&amp;#39;;

/**
 * Bağımlılıkları tanımlıyoruz
 */
var chalk = require(&amp;#39;chalk&amp;#39;);

/**
 * Aşağıda Niteleyiciler, Renkler ve Arkaplan renklerini bulabilirsiniz
 * Bir kaç örnekle başlayalım.
 */
console.log(
  chalk.blue.bold(&amp;#39;1. Nodejs için&amp;#39;)
)

/**
 * Inverse: atanan rengi tersine çevirir.
 */
console.log(
  chalk.blue(&amp;#39;2. Türkçe&amp;#39;) + &amp;#39; Kaynak&amp;#39; + chalk.inverse.red(&amp;#39;!&amp;#39;)
)

/**
 * birdern fazla niteleyici ve rengi ard arda kullanabilirsiniz
 */
console.log(
  chalk.blue.magenta.dim.bold(&amp;#39;3. Notlar&amp;#39;)
)

console.log(
  chalk.black(&amp;#39;5. Örnek&amp;#39;, chalk.underline.bgGreen(&amp;#39; uygulamalar&amp;#39;) + &amp;#39;!&amp;#39;)
)

console.log(
  chalk.green(
      &amp;#39;Nodejs Dersleri &amp;#39; +
      chalk.blue.underline.bold(&amp;#39;nodejs-dersleri.github.io&amp;#39;) +
      &amp;#39; ziyaret edin&amp;#39;
  )
);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Şimdi terminalden &lt;code&gt;index.js&lt;/code&gt; dosyamızı çağıralım.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node index.js
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/articles/npm-moduleri-chalk-nedir/nodejs-chalk-nedir.png&quot; alt=&quot;nodejs-chalk-nedir&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;niteleyiciler&quot;&gt;Niteleyiciler&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bold&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;italic&lt;/code&gt; &lt;em&gt;(yaygın olarak desteklenmiyor)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;underline&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inverse&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hidden&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;strikethrough&lt;/code&gt; &lt;em&gt;(yaygın olarak desteklenmiyor)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;renkler&quot;&gt;Renkler&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;black&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;red&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;green&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yellow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;magenta&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cyan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;white&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gray&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;arkaplan-renkleri&quot;&gt;Arkaplan renkleri&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bgBlack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bgRed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bgGreen&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bgYellow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bgBlue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bgMagenta&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bgCyan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bgWhite&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/br&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&quot;kendi-mod-l-m-z-yapal-m&quot;&gt;Kendi modülümüzü yapalım&lt;/h2&gt;
&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ansi renk kodları ve niteleyiciler hakkında daha fazla bilgi için &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code#graphics&quot;&gt;wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;module.js&lt;/code&gt; adında bir dosya oluşturalım.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
&amp;#39;use strict&amp;#39;;

module.exports= function(text,type){

  /**
   * Tüm renk ve niteleyici kodları için kaynaklar kısmında link mevcut
   */
  var style = {
    bold:       [1, 22],
    underline:  [4, 24],
    black:      [30, 39],
        red:        [31, 39],
        green:      [32, 39],
    bgBlack:    [40, 49],
        bgRed:      [41, 49],
        bgGreen:    [42, 49],
        bgYellow:   [43, 49],
        bgBlue:     [44, 49]
  }

  function wrap(args) {
    style = style[type];

    /**
    * Aslında yaptığımı şey =&amp;gt; \u001b[31m  text  \u001b[m39
    * bu bize kırmızı renkte bir çıktı verecektir.
    */
    var tags = {
       open: &amp;#39;\u001b[&amp;#39; + style[0] + &amp;#39;m&amp;#39;,
       close: &amp;#39;\u001b[&amp;#39; + style[1] + &amp;#39;m&amp;#39;
     }
    return tags.open + args + tags.close
  }

  return wrap(text)

};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Şimdi index dosyamıza şu kodları ekleyelim&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var renk = require(&amp;#39;./module.js&amp;#39;);

console.log(
  renk(&amp;#39;Bu bizim module.js\&amp;#39;ten dönen renklendirilmiş veri :)&amp;#39;,&amp;#39;bgBlue&amp;#39;) + &amp;#39;\n&amp;#39;  +
  renk(&amp;#39;Aşağıdakiler ise chalk\&amp;#39;tan alınan çıktılar&amp;#39;,&amp;#39;green&amp;#39;)
)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/articles/npm-moduleri-chalk-nedir/nodejs-terminal-renklendirme.png&quot; alt=&quot;nodejs-terminal-renklendirme&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Kendi modülümüzü  anlatmak için yaptım. Generic bir yapısı yoktur.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;kaynaklar&quot;&gt;Kaynaklar&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.bash-hackers.org/scripting/terminalcodes&quot;&gt;http://wiki.bash-hackers.org/scripting/terminalcodes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code&quot;&gt;https://en.wikipedia.org/wiki/ANSI_escape_code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chalk/chalk&quot;&gt;https://github.com/chalk/chalk&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
</description>
    </item>
    <item>
      <title>Npm modulleri - FTP nedir?</title>
      <link>http://nodejs-dersleri.github.io/articles/npm-moduleri-ftp-nedir/</link>
      <pubDate>Wed, 04 Nov 2015 23:30:00 +0200</pubDate>
      <guid isPermaLink="true">http://nodejs-dersleri.github.io/articles/npm-moduleri-ftp-nedir/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;code&gt;ftp&lt;/code&gt; modülü standart ftp protokollerini kullanarak ftp server’a bağlantı yapmamızı sağlayan bir modül. Minimal ftp adında bir konu başlığımız mevcut. Bu konuyu videolu olarak anlatmayı düşünüyorum. Şimdilik sadece &lt;code&gt;ftp&lt;/code&gt; modülünün nasıl çalıştığını anlatacağım.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Yapacağımız minimal ftp büyük olasılıkla aşağıdaki görsellere yakın olarak yayınlanacak.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/npm-moduleri-ftp-nedir/main.png&quot; alt=&quot;main.js&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/npm-moduleri-ftp-nedir/ftp.png&quot; alt=&quot;ftp.js&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;package-json&quot;&gt;package.json&lt;/h3&gt;
&lt;p&gt;Npm init ile başlıyoruz.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;package.json dosyamız oluştu.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;ftp-app&amp;quot;,
  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;index-js&quot;&gt;index.js&lt;/h3&gt;
&lt;p&gt;Şimdi &lt;code&gt;index.js&lt;/code&gt; dosyası oluşturuyoruz.&lt;/p&gt;
&lt;p&gt;Test için bir fpt account oluşturmuştum, siz mevcut ftp hesaplarınızı deneyebilirsiniz. Host, user, password olarak bilgilerinizi girdiğinizde bağlantı sağlanacaktır. Eğer herhangi bir host girmezseniz 127.0.0.1:23 ip/portuyla localinize bağlanmayı deneyecektir.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// FTP modülünü require ile çağırıyoruz.
var Client = require(&amp;#39;ftp&amp;#39;);

// yeni bir client oluşturuyoruz.
var client = new Client();

/**
 * account objesine verilerimizi giriyoruz, diğer opsiyonlar (secure vs)
 * için https://www.npmjs.com/package/ftp#methods methods&amp;gt;connect başlığı
 * altında daha fazla bilgi var.
 */

var account = {
  host: &amp;quot;ftp.hostisminiz.com&amp;quot;,
  user: &amp;quot;kullaniciadi&amp;quot;,
  password : &amp;quot;sifreniz&amp;quot;,
}

/**
 * ready: başarılı bir şekilde giriş yapıldığında
 */
client.on(&amp;#39;ready&amp;#39;, function() {

  /**
   * list: server&amp;#39;daki dosya/file listesini döner
   */
  client.list(function(err, list) {
    if (err) throw err;
    console.log(JSON.stringify(list, null, &amp;#39; &amp;#39;));
  });

  /**
   * on:error: eğer bağlantıda herhangi bir problem olursa bildirim yapar
   */
  client.on(&amp;#39;error&amp;#39;, function() {
    console.log(&amp;#39;error&amp;#39;);
  });

});

/**
 * account objesini connect metoduna gönderip çalıştırıyoruz.
 */
client.connect(account);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;client.list&lt;/code&gt; Serverdaki dosyalarımızın listesini döner. Eğer sunucudaki herhangi bir klasöre erişmek isterseniz bunu list fonksiyonuna path olarak girmeniz yeterli.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;client.list(&amp;#39;/theme/css/less&amp;#39;)&lt;/code&gt; böylelikle istediğiniz klasörü listelemiş olursunuz.&lt;/p&gt;
&lt;p&gt;Kendi hostumdan şu şekilde bir çıktı aldım:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
{
  &amp;quot;type&amp;quot;: &amp;quot;d&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;stylesheets&amp;quot;,
  &amp;quot;sticky&amp;quot;: false,
  &amp;quot;rights&amp;quot;: {
   &amp;quot;user&amp;quot;: &amp;quot;rwx&amp;quot;,
   &amp;quot;group&amp;quot;: &amp;quot;rx&amp;quot;,
   &amp;quot;other&amp;quot;: &amp;quot;rx&amp;quot;
  },
  &amp;quot;owner&amp;quot;: &amp;quot;16761643&amp;quot;,
  &amp;quot;group&amp;quot;: &amp;quot;16761643&amp;quot;,
  &amp;quot;size&amp;quot;: 4096,
  &amp;quot;date&amp;quot;: &amp;quot;2015-10-17T21:19:00.000Z&amp;quot;
 }
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/articles/npm-moduleri-ftp-nedir/log.png&quot; alt=&quot;log.js&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type : ‘-‘ ya da ‘d’ olarak döner. - dosya olduğunu, d bir dizin olduğunu gösterir&lt;/li&gt;
&lt;li&gt;Date : son değiştirilme tarihini verir.&lt;/li&gt;
&lt;li&gt;Rights : dosya yazma, okuma izinleri. rwx rx rx olarak çıktı geliyor&lt;/li&gt;
&lt;li&gt;Size : Dosyanın boyutunu kb cinsinden verir.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;dosya-indirme&quot;&gt;Dosya indirme&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;client.get(&amp;#39;/javascrip/main.js&amp;#39;, function(err) {

});
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;dosya-g-nderme&quot;&gt;Dosya gönderme&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;client.put(&amp;#39;/javascrip/main.js&amp;#39;, function(err) {
   if (err) throw err;
   client.end();
});
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;pathname-working-directory-pwd&quot;&gt;Pathname working directory PWD&lt;/h3&gt;
&lt;p&gt;içerisinde bulunduğunuz path’i verir&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;client.pwd(function(err) {
   if (err) throw err;
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;! &lt;code&gt;FTP&lt;/code&gt; modülü tüm ftp komutlarını içermez.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;bkz: &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_FTP_commands&quot;&gt;ftp komutlar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IETF(internet engineering task force)’in ftp &lt;a href=&quot;https://www.ietf.org/rfc/rfc959.txt&quot;&gt;kontrol listesi&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Minimal ftp uygulamasında daha fazla bilgilendirme yapacağım.&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    <item>
      <title>Npm modulleri - Inquirerjs nedir?</title>
      <link>http://nodejs-dersleri.github.io/articles/npm-moduleri-inquirerjs-nedir/</link>
      <pubDate>Tue, 03 Nov 2015 23:30:00 +0200</pubDate>
      <guid isPermaLink="true">http://nodejs-dersleri.github.io/articles/npm-moduleri-inquirerjs-nedir/</guid>
      <author></author>
      <description>&lt;p&gt;Yeoman ile proje oluşturduğumuzda ya da &lt;code&gt;npm init&lt;/code&gt; yaptığımızda karşımıza bazı sorular gelir. Inquirerjs’le tam olarak bunu yapcağız.&lt;/p&gt;
&lt;p&gt;Kullanıcıya bazı sorular sorup cevaplarına göre işlem yapacağız.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://youtu.be/qGWs6qI4sw8&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/qGWs6qI4sw8/0.jpg&quot; alt=&quot;Nodejs dersleri&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;package-json&quot;&gt;package.json&lt;/h3&gt;
&lt;p&gt;Npm init ile başlıyoruz.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;package.json dosyamız oluştu.&lt;/p&gt;
&lt;h3 id=&quot;index-js&quot;&gt;index.js&lt;/h3&gt;
&lt;p&gt;Şimdi &lt;code&gt;index.js&lt;/code&gt; dosyası oluşturuyoruz.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/npm-moduleri-inquirerjs-nedir/main.png&quot; alt=&quot;main.js&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// inquirer modülünü çağırıyoruz
var inquirer = require(&amp;#39;inquirer&amp;#39;);

// gelen veriye göre bir dosya oluşturacağız bunun içinde `fs` modülünü kullanacağız.
var fs = require(&amp;#39;fs&amp;#39;);

// Sorularımızı oluşturuyoruz

var  questions = [
  {
    type: &amp;quot;input&amp;quot;,
    name: &amp;quot;name&amp;quot;,
    message: &amp;quot;Project name?&amp;quot;
  },
  {
    type: &amp;quot;list&amp;quot;,
     name: &amp;quot;main&amp;quot;,
     message: &amp;quot;Main file&amp;quot;,
     choices: [ &amp;quot;app.js&amp;quot;, &amp;quot;app2.js&amp;quot;, &amp;quot;npm.js&amp;quot; ],
  },
  {
      type: &amp;quot;password&amp;quot;,
      name : &amp;#39;checkbox&amp;#39;,
      message : &amp;#39;Password&amp;#39;
  }
];

// şimdi inquirerjs&amp;#39;i çalıştırıyoruz



inquirer.prompt(questions, function( answers ) {

  // Eğer main dosyası var ise fs ile, seçilen dosyayı oluşturacağız
  if(answers.main){

      // @ oluşturulacak dosya
      // @ dosyaya yazacağımız data
      // @ işlem sonucu
      fs.writeFile(answers.main, &amp;#39;var main =&amp;quot;&amp;quot;;&amp;#39;, function(){
        console.log(&amp;#39;dosya yazıldı! Şimdi dizininizi kontrol edin&amp;#39;)
      });
  }
  console.log(JSON.stringify(answers, null , &amp;#39; &amp;#39;));
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Çıktı olarak console’a json datayı yazacak ve seçilen dosyayı dizin klasörüne oluşturacak.&lt;/p&gt;
&lt;h3 id=&quot;okudu-unuz-i-in-te-ekk-r-ederim-&quot;&gt;Okuduğunuz için teşekkür ederim.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs-dersleri&quot;&gt;Tüm Github repositorileri&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
    <item>
      <title>Npm modül yapımı 1</title>
      <link>http://nodejs-dersleri.github.io/articles/npm-modul-yapimi-1/</link>
      <pubDate>Mon, 02 Nov 2015 00:30:00 +0200</pubDate>
      <guid isPermaLink="true">http://nodejs-dersleri.github.io/articles/npm-modul-yapimi-1/</guid>
      <author></author>
      <description>&lt;p&gt;Npm için yapacağımız bu modül her çağırdığımızda bize benzersiz ID’ler üretecek. Modülümüzü oluşturduktan sonra küçük bir test yazaıp onaydan geçirdikten sonra npm sitesine kayıt işlemini yapalım.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;yap-lacaklar&quot;&gt;Yapılacaklar&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Modülü oluşturalım&lt;/li&gt;
&lt;li&gt;Basit bir test yazalım&lt;/li&gt;
&lt;li&gt;Modulü npm sitesine kayıt ettirelim&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Npm init yaparak başlayalım. proje dosyası oluşturup terminalden klasöre erilim daha sonra &lt;code&gt;npm init&lt;/code&gt; yaparak başlayalım.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Modülünüzün ismini, açıklamasını, versiyonunu .etc girdikten sonra package.json dosyamızı oluşturduk.&lt;/p&gt;
&lt;h3 id=&quot;package-json&quot;&gt;package.json&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;guidfy&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.0.1&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;Globally unique identifier&amp;quot;,
  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,
  &amp;quot;scripts&amp;quot;: {
    &amp;quot;test&amp;quot;: &amp;quot;mocha -R spec -u tdd tests/*.js&amp;quot;
  },
  &amp;quot;devDependencies&amp;quot;: {
    &amp;quot;mocha&amp;quot;: &amp;quot;~1.14.0&amp;quot;,
    &amp;quot;should&amp;quot;: &amp;quot;^7.1.1&amp;quot;
  },
  &amp;quot;repository&amp;quot;: {
    &amp;quot;type&amp;quot;: &amp;quot;git&amp;quot;,
    &amp;quot;url&amp;quot;: &amp;quot;git+https://github.com/arifcakiroglu/guidify.git&amp;quot;
  },
  &amp;quot;keywords&amp;quot;: [
    &amp;quot;unique&amp;quot;,
    &amp;quot;id&amp;quot;,
    &amp;quot;unique&amp;quot;,
    &amp;quot;guid&amp;quot;,
    &amp;quot;guidify&amp;quot;
  ],
  &amp;quot;author&amp;quot;: &amp;quot;Arif Cakiroglu &amp;lt;cakirogluarif@gmail.com&amp;gt;&amp;quot;,
  &amp;quot;license&amp;quot;: &amp;quot;MIT&amp;quot;,
  &amp;quot;bugs&amp;quot;: {
    &amp;quot;url&amp;quot;: &amp;quot;https://github.com/arifcakiroglu/guidify/issues&amp;quot;
  },
  &amp;quot;homepage&amp;quot;: &amp;quot;https://github.com/arifcakiroglu/guidify#readme&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;index-js&quot;&gt;index.js&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;module.exports= function(){
  // Anlık tarihi alıp d değişkenine atıyoruz.
  var d = new Date().getTime();

  // &amp;#39;xxx&amp;#39; uzunluğunda bir çıktı üreteceğiz.
  var guid = &amp;#39;xxxxxxxxxxxxxxxxxxxx&amp;#39;.replace(/[x]/g, function(c) {
    var r = (d + Math.random()*16)%16 | 0;
    d = Math.floor(d/16);
    return (c==&amp;#39;x&amp;#39; ? r : (r&amp;amp;0x3|0x8)).toString(16);
  });

  // Test edelim çalışıyoru mu diye
  // console.log(&amp;quot;Bu ilk guid&amp;#39;imiz %s&amp;quot;,guid);
  return guid
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Modülümüzün index dosyasını oluşturduk çalışıp çalışmadığını görmek için &lt;code&gt;app.js&lt;/code&gt; dosyası oluşturup modülümüzü çağıracağız&lt;/p&gt;
&lt;h3 id=&quot;app-js&quot;&gt;app.js&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;// şimdilik denemek için ./index.js olarak çağırıyoruz npm&amp;#39;e kayıt ettirmeden önce app.js dosyasını sileceğiz

var guidify = require(&amp;quot;./index.js&amp;quot;);
console.log(&amp;quot;Bu ilk guid&amp;#39;imiz %s&amp;quot;, guidify());

// Çıktımız bu şekilde oldu. Her denemede farklı bir çıktı alacağız.
// Bu ilk guid&amp;#39;imiz 18dc1f7c0373d09bdc1a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/articles/npm-modul-yapimi-1/log.png&quot; alt=&quot;ilk çıktı&quot;&gt;&lt;/p&gt;
&lt;p&gt;Şimdi ise bir test yazalım.&lt;/p&gt;
&lt;p&gt;Bunun için &lt;code&gt;/tests&lt;/code&gt; klasörü açıyorum içerisine &lt;code&gt;guidify.js&lt;/code&gt; dosyamı oluşturuyorum.&lt;/p&gt;
&lt;h3 id=&quot;guidify-js&quot;&gt;guidify.js&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;/**
 * Module dependencies.
 */

 // bir üst dizindeki modülümüzü çağırıyoruz
var Guidify = require(&amp;#39;../index.js&amp;#39;);
var assert = require(&amp;#39;assert&amp;#39;);

suite(&amp;#39;\033[36m Test guid yaratıcı \033[90m&amp;#39;, function() {
  test(&amp;#39;unique&amp;#39;, function(done) {
    var guid = Guidify();
    assert.equal(typeof(guid), &amp;#39;string&amp;#39;, &amp;#39;Should return a string&amp;#39; );
    assert.equal(guid.length, 20, &amp;#39;Should return a string with length 20&amp;#39; );
    done();
  });
});
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;makefile&quot;&gt;Makefile&lt;/h3&gt;
&lt;p&gt;Terminalden &lt;code&gt;make test&lt;/code&gt; ya da &lt;code&gt;npm test&lt;/code&gt; yazarak testimizi çalıştırıyoruz.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/npm-modul-yapimi-1/test.png&quot; alt=&quot;test&quot;&gt;&lt;/p&gt;
&lt;p&gt;Makefile’ın ne olduğunu ve detaylarını başka bir makalede açıklayacapım. (yazınca buraya linkini eklerim söz)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install: package.json
    @npm install

test:
    @./node_modules/.bin/mocha -u tdd

.PHONY: test
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;npm-kay-t&quot;&gt;Npm kayıt&lt;/h3&gt;
&lt;p&gt;Geç oldu buna yarın devam ederim :)&lt;/p&gt;
&lt;h3 id=&quot;okudu-unuz-i-in-te-ekk-r-ederim-&quot;&gt;Okuduğunuz için teşekkür ederim.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs-dersleri&quot;&gt;Tüm Github repositorileri&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
    <item>
      <title>Nodejs ile screen scraping</title>
      <link>http://nodejs-dersleri.github.io/articles/nodejs-ile-screen-scraping/</link>
      <pubDate>Sun, 01 Nov 2015 16:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://nodejs-dersleri.github.io/articles/nodejs-ile-screen-scraping/</guid>
      <author></author>
      <description>&lt;p&gt;Herhangi bir siteden istediğiniz verileri jQuery core komutlarıyla alabilirsiniz. Bunun için &lt;code&gt;request&lt;/code&gt; ve &lt;code&gt;cheerio&lt;/code&gt; npm modullerini kullanacağız.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;request&lt;/code&gt; ile indirdiğimiz datayı &lt;code&gt;cheerio&lt;/code&gt; kullanarak jQuery gibi işlem yapacağız.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;packages-json&quot;&gt;packages.json&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;screen-scraping&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.0.1&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;Nodejs ile screen scraping&amp;quot;,
  &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,
  &amp;quot;scripts&amp;quot;: {
    &amp;quot;start&amp;quot;: &amp;quot;node index.js&amp;quot;
  },
  &amp;quot;author&amp;quot;: &amp;quot;Arif Cakiroglu &amp;lt;cakirogluarif@gmail.com&amp;gt; (http://www.arifcakiroglu.com)&amp;quot;,
  &amp;quot;license&amp;quot;: &amp;quot;ISC&amp;quot;,
  &amp;quot;dependencies&amp;quot;: {
    &amp;quot;cheerio&amp;quot;: &amp;quot;^0.19.0&amp;quot;,
    &amp;quot;request&amp;quot;: &amp;quot;^2.65.0&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;packages.json&lt;/code&gt; dosyasını oluşturduktan sonra &lt;code&gt;npm install&lt;/code&gt; komutunu çalıştırıyoruz.&lt;/p&gt;
&lt;p&gt;Npm modulleri proje dosyamıza node_modules klasörüne inecektir. Daha sonra &lt;code&gt;index.js&lt;/code&gt; dosyası oluşturuyoruz.&lt;/p&gt;
&lt;h3 id=&quot;index-js&quot;&gt;index.js&lt;/h3&gt;
&lt;p&gt;Öncelikle node modullerimizi çağırıyoruz.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
var request = require(&amp;#39;request&amp;#39;);
var cheerio = require(&amp;#39;cheerio&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Url olarak static bir url ekliyorum: &lt;code&gt;var url = &amp;#39;https://www.npmjs.com/package/q&amp;#39;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Url sonundaki ‘q’ yerine herhangi bir npm modulü yazabilirsiniz.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;request(url, function(error, response, html){
  if(!error){
    // request ile çağırdığımız urlden gelen html datayı &amp;#39;$&amp;#39; olarak yeniden tanımlıyoruz.
    var $ = cheerio.load(html);

    // Çıktı için json objesi oluşturuyorum
    var json = {};
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;cheerio modulü hakkında daha fazla bilgi almak için &lt;a href=&quot;https://github.com/cheeriojs/cheerio&quot;&gt;reposu&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/* Modül isminin bulunduğu yeri inspectElement ile bulup alıyorum.
 * .package-name class&amp;#39;ını seçiyorum ve datasını json objesine title olarak atıyorum
 * daha sonra bu datayı console.log() ile yazdıracağız.
 */

$(&amp;#39;.package-name&amp;#39;).filter(function(){
  json.title = $(this).text().trim()
});


console.log(JSON.stringify(json, null, 4));
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ve çıktı olarak name’ini alıyoruz&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/nodejs-ile-screen-scraping/nodejs-ile-screen-scraping-1.png&quot; alt=&quot;ilk çıktımız&quot;&gt;&lt;/p&gt;
&lt;p&gt;description, repository ve toplam download sayısını da alıyoruz&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
// Description
$(&amp;#39;.package-description&amp;#39;).filter(function(){
  json.desc = $(this).text().trim()
});


// Repository
$(&amp;#39;.box li&amp;#39;).eq(2).filter(function(){
  json.repo = $(this).text().trim()
});


// Total download
$(&amp;#39;.collaborators&amp;#39;).next().next().filter(function(){
    json.stats = $(this).children().eq(2).text().replace(/\s+/g, &amp;#39; &amp;#39;).trim();
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/articles/nodejs-ile-screen-scraping/nodejs-ile-screen-scraping-2.png&quot; alt=&quot;ikinci çıktımız&quot;&gt;&lt;/p&gt;
&lt;p&gt;Kısaca cheerio kullanarak screen scraping için basit bir örnek oluşturduk.&lt;/p&gt;
&lt;p&gt;Daha sonrası için &lt;a href=&quot;http://phantomjs.org/&quot;&gt;phanthopjs&lt;/a&gt; ile bir uygulama yapacağız. Yazınca buray ekleyeceğim linkini.&lt;/p&gt;
&lt;h3 id=&quot;okudu-unuz-i-in-te-ekk-r-ederim-&quot;&gt;Okuduğunuz için teşekkür ederim.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs-dersleri&quot;&gt;Tüm Github repositorileri&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
  </channel>
</rss>